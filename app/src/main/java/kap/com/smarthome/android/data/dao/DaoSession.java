package kap.com.smarthome.android.data.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import kap.com.smarthome.android.data.bean.Devices;
import kap.com.smarthome.android.data.bean.IRKey;
import kap.com.smarthome.android.data.bean.RelayBox;
import kap.com.smarthome.android.data.bean.Room;
import kap.com.smarthome.android.data.bean.Scenes;
import kap.com.smarthome.android.data.bean.ScenesDevice;
import kap.com.smarthome.android.data.bean.ScenesTrigger;
import kap.com.smarthome.android.data.bean.User;

import kap.com.smarthome.android.data.dao.DevicesDao;
import kap.com.smarthome.android.data.dao.IRKeyDao;
import kap.com.smarthome.android.data.dao.RelayBoxDao;
import kap.com.smarthome.android.data.dao.RoomDao;
import kap.com.smarthome.android.data.dao.ScenesDao;
import kap.com.smarthome.android.data.dao.ScenesDeviceDao;
import kap.com.smarthome.android.data.dao.ScenesTriggerDao;
import kap.com.smarthome.android.data.dao.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig devicesDaoConfig;
    private final DaoConfig iRKeyDaoConfig;
    private final DaoConfig relayBoxDaoConfig;
    private final DaoConfig roomDaoConfig;
    private final DaoConfig scenesDaoConfig;
    private final DaoConfig scenesDeviceDaoConfig;
    private final DaoConfig scenesTriggerDaoConfig;
    private final DaoConfig userDaoConfig;

    private final DevicesDao devicesDao;
    private final IRKeyDao iRKeyDao;
    private final RelayBoxDao relayBoxDao;
    private final RoomDao roomDao;
    private final ScenesDao scenesDao;
    private final ScenesDeviceDao scenesDeviceDao;
    private final ScenesTriggerDao scenesTriggerDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        devicesDaoConfig = daoConfigMap.get(DevicesDao.class).clone();
        devicesDaoConfig.initIdentityScope(type);

        iRKeyDaoConfig = daoConfigMap.get(IRKeyDao.class).clone();
        iRKeyDaoConfig.initIdentityScope(type);

        relayBoxDaoConfig = daoConfigMap.get(RelayBoxDao.class).clone();
        relayBoxDaoConfig.initIdentityScope(type);

        roomDaoConfig = daoConfigMap.get(RoomDao.class).clone();
        roomDaoConfig.initIdentityScope(type);

        scenesDaoConfig = daoConfigMap.get(ScenesDao.class).clone();
        scenesDaoConfig.initIdentityScope(type);

        scenesDeviceDaoConfig = daoConfigMap.get(ScenesDeviceDao.class).clone();
        scenesDeviceDaoConfig.initIdentityScope(type);

        scenesTriggerDaoConfig = daoConfigMap.get(ScenesTriggerDao.class).clone();
        scenesTriggerDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        devicesDao = new DevicesDao(devicesDaoConfig, this);
        iRKeyDao = new IRKeyDao(iRKeyDaoConfig, this);
        relayBoxDao = new RelayBoxDao(relayBoxDaoConfig, this);
        roomDao = new RoomDao(roomDaoConfig, this);
        scenesDao = new ScenesDao(scenesDaoConfig, this);
        scenesDeviceDao = new ScenesDeviceDao(scenesDeviceDaoConfig, this);
        scenesTriggerDao = new ScenesTriggerDao(scenesTriggerDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(Devices.class, devicesDao);
        registerDao(IRKey.class, iRKeyDao);
        registerDao(RelayBox.class, relayBoxDao);
        registerDao(Room.class, roomDao);
        registerDao(Scenes.class, scenesDao);
        registerDao(ScenesDevice.class, scenesDeviceDao);
        registerDao(ScenesTrigger.class, scenesTriggerDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        devicesDaoConfig.clearIdentityScope();
        iRKeyDaoConfig.clearIdentityScope();
        relayBoxDaoConfig.clearIdentityScope();
        roomDaoConfig.clearIdentityScope();
        scenesDaoConfig.clearIdentityScope();
        scenesDeviceDaoConfig.clearIdentityScope();
        scenesTriggerDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
    }

    public DevicesDao getDevicesDao() {
        return devicesDao;
    }

    public IRKeyDao getIRKeyDao() {
        return iRKeyDao;
    }

    public RelayBoxDao getRelayBoxDao() {
        return relayBoxDao;
    }

    public RoomDao getRoomDao() {
        return roomDao;
    }

    public ScenesDao getScenesDao() {
        return scenesDao;
    }

    public ScenesDeviceDao getScenesDeviceDao() {
        return scenesDeviceDao;
    }

    public ScenesTriggerDao getScenesTriggerDao() {
        return scenesTriggerDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
